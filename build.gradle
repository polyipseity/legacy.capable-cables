//////////////////////////////////////////////////
// TITLE Gradle Build Script
//////////////////////////////////////////////////

import java.util.regex.Pattern

import static java.io.File.separator

buildscript {
	repositories {
		jcenter()
		gradlePluginPortal()
		maven {
			name = 'Minecraft Forge'
			url = 'https://files.minecraftforge.net/maven'
		}
	}

	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.+', changing: true
	}
	// COMMENT Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
}

plugins {
	id 'com.github.johnrengelman.shadow' version '4.0.4' apply false
}

allprojects {
	ext {
		utilitiesDir = "$rootDir${separator}gradle${separator}utilities".toString()
		modulesDir = "$rootDir${separator}gradle${separator}modules".toString()
	}

	apply from: "$modulesDir${separator}plugins.gradle"

	apply from: "$utilitiesDir${separator}miscellaneous.gradle"
	apply from: "$utilitiesDir${separator}globals.gradle"
	apply from: "$utilitiesDir${separator}collections.gradle"
	apply from: "$utilitiesDir${separator}strings.gradle"
	apply from: "$utilitiesDir${separator}io${separator}io.gradle"
	apply from: "$utilitiesDir${separator}io${separator}properties${separator}properties.gradle"
	apply from: "$utilitiesDir${separator}io${separator}properties${separator}ext.properties.gradle"

	loadExt.call "$projectDir${separator}module.properties"

	apply from: "$modulesDir${separator}versioning.gradle"
	apply from: "$modulesDir${separator}information.gradle"

	apply from: "$modulesDir${separator}repositories.gradle"
	apply from: "$modulesDir${separator}dependencies.gradle"

	apply from: "$modulesDir${separator}sources.gradle"
	apply from: "$modulesDir${separator}resources.gradle"
	apply from: "$modulesDir${separator}javadoc.gradle"

	apply from: "$modulesDir${separator}optional${separator}test.gradle"
	apply from: "$modulesDir${separator}artifacts.gradle"

	apply from: "$modulesDir${separator}optional${separator}ide.gradle"

	ext {
		mainSubproject = project rootProject.ext.mainSubprojectPath
		// COMMENT mod
		modID = rootProject.ext.modID
	}

	// COMMENT append
	afterEvaluate { storeExt.call() }
}

ext {
	// COMMENT game
	minecraftVersion = minecraftForgeVersion.split('-').first()
	String[] minecraftVersions = minecraftVersion.split Pattern.quote('.')
	minecraftVersionMajor = minecraftVersions.first().toInteger()
	minecraftVersionMinor = minecraftVersions[1].toInteger()
}

apply from: "$utilitiesDir${separator}throwable.gradle"
apply from: "$utilitiesDir${separator}gradle${separator}tasks.gradle"

apply from: "$modulesDir${separator}optional${separator}minecraft-forge.gradle"

if (mainSubproject == project) {
	apply from: "$modulesDir${separator}optional${separator}publishing.gradle"

	afterEvaluate {
		writePOM()
	}
} else {
	afterEvaluate {
		mainSubproject.tasks.configureEach { Task subprojectTask ->
			def projectTask = findNamedTask subprojectTask.name
			if (projectTask) {
				try {
					projectTask.configure {
						dependsOn subprojectTask
						enabled false
					}
				} catch (IllegalStateException ex) {
					// COMMENT task is not configurable
					caughtThrowable ex
				}
			} else {
				tasks.register(subprojectTask.name) {
					it.group subprojectTask.group
					it.dependsOn subprojectTask
				}
			}
		}
		evaluationDependsOn mainSubproject.path
	}
}
